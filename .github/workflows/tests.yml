---
name: Tests
on:
  push:
    branches:
      - main
    paths:
      - "*.js"
      - "*.json"
      - "*.yaml"
      - "__tests__/**"
      - "packages/**"
      - "!**.md"
      - "!examples/**/*.js"
      - "!examples/**/*.json"
  pull_request:
    branches:
      - main
    paths:
      - "*.js"
      - "*.json"
      - "*.yaml"
      - "__tests__/**"
      - "packages/**"
      - "!**.md"
      - "!examples/**/*.js"
      - "!examples/**/*.json"

jobs:
  unit:
    name: Unit Test Modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["20.10"]
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v2
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Install Lerna
        run: pnpm add -g lerna@4

      - name: Install Dependencies
        run: lerna bootstrap --ignore-scripts

      - name: Run Tests
        run: "pnpm test:ci"

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-unit-tests
          path: coverage-root/coverage-final.json
          if-no-files-found: error

  ace:
    name: Ace Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["20.10"]
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v2
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Install Lerna
        run: pnpm add -g lerna@4

      - name: Install Dependencies
        run: lerna bootstrap --ignore-scripts

      - name: Run Tests
        run: "pnpm test:ace"

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-ace-integration
          path: coverage-ace/coverage-final.json
          if-no-files-found: error

  firebase:
    name: Firebase Integration
    runs-on: ubuntu-latest
    environment: test
    strategy:
      matrix:
        node-version: ["20.10"]
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v2
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Install Lerna
        run: pnpm add -g lerna@4

      - name: Install Dependencies
        run: lerna bootstrap --ignore-scripts

      - name: Add Realtime Database Rules
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "database.rules.json"
          json: ${{ secrets.FIREBASE_DATABASE_JSON }}
          dir: "__tests__/firebase/.firebase/"

      - name: Run Tests
        run: "pnpm test:firebase"

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-firebase-integration
          path: coverage-firebase/coverage-final.json
          if-no-files-found: error

  monaco:
    name: Monaco Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["20.10"]
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v2
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Install Lerna
        run: pnpm add -g lerna@4

      - name: Install Dependencies
        run: lerna bootstrap --ignore-scripts

      - name: Run Tests
        run: "pnpm test:monaco"

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-monaco-integration
          path: coverage-monaco/coverage-final.json
          if-no-files-found: error

  coverage:
    name: Generate Coverage Report
    needs: [unit, ace, firebase, monaco]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["20.10"]
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v2
        with:
          cache: "pnpm"
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Install Dependencies
        run: pnpm install

      - uses: actions/download-artifact@v2

      - name: Generate Coverage Report
        run: pnpm coverage

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v2
        with:
          directory: ./coverage
          fail_ci_if_error: true
