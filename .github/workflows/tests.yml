# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
---
name: Tests
on:
  push:
    branches:
      - main
    paths:
      - "*.js"
      - "*.json"
      - "*.yml"
      - "__tests__/**"
      - "packages/**"
      - "!**.md"
      - "!examples/**/*.js"
      - "!examples/**/*.json"
  pull_request:
    branches:
      - main
    # paths:
    #   - "*.js"
    #   - "*.json"
    #   - "*.yml"
    #   - "__tests__/**"
    #   - "packages/**"
    #   - "!**.md"
    #   - "!examples/**/*.js"
    #   - "!examples/**/*.json"

jobs:
  unit:
    name: Unit Test Modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["20.10"]
        pnpm-version: [8]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare Environment
        uses: ./.github/shared/setup
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ matrix.pnpm-version }}

      - name: Run Tests
        run: "pnpm test:ci"

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-unit-tests
          path: coverage-unit/coverage-final.json
          if-no-files-found: error

  ace:
    name: Ace Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["20.10"]
        pnpm-version: [8]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare Environment
        uses: ./.github/shared/setup
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ matrix.pnpm-version }}

      - name: Run Tests
        run: "pnpm test:ace"

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-ace-integration
          path: coverage-ace/coverage-final.json
          if-no-files-found: error

  firebase:
    name: Firebase Integration
    runs-on: ubuntu-latest
    environment: test
    strategy:
      matrix:
        node-version: ["20.10"]
        pnpm-version: [8]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare Environment
        uses: ./.github/shared/setup
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ matrix.pnpm-version }}

      - name: Add Realtime Database Rules
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "database.rules.json"
          json: ${{ secrets.FIREBASE_DATABASE_JSON }}
          dir: "__tests__/firebase/.firebase/"

      - name: Run Tests
        run: "pnpm test:firebase"

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-firebase-integration
          path: coverage-firebase/coverage-final.json
          if-no-files-found: error

  # Temporarily Disable Monaco Suite till the Import Transformation Issue is solved.
  # monaco:
  #   name: Monaco Integration
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: ["20.10"]
  #       pnpm-version: [8]
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Prepare Environment
  #       uses: ./.github/shared/setup
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         pnpm-version: ${{ matrix.pnpm-version }}

  #     - name: Run Tests
  #       run: "pnpm test:monaco"

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: coverage-monaco-integration
  #         path: coverage-monaco/coverage-final.json
  #         if-no-files-found: error

  coverage:
    name: Generate Coverage Report
    needs: [unit, ace, firebase]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["20.10"]
        pnpm-version: [8]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare Environment
        uses: ./.github/shared/setup
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ matrix.pnpm-version }}

      - uses: actions/download-artifact@v4

      - name: Generate Coverage Report
        shell: bash
        run: |
          dirs=$(ls -d *coverage-*)
          mkdir -p coverage-all coverage
          for dir in $dirs
          do
            cp "$dir/coverage-final.json" "coverage-all/$dir.json"
          done
          pnpm coverage

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage
          fail_ci_if_error: true
